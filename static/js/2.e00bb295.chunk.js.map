{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","postsBlock","posts","item","descriptionBlock","mainPhoto","contact","Post","props","react_default","a","createElement","className","s","src","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","console","log","postsElements","map","p","MyPosts_Post_Post","createRef","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","ProfileStatusWithHooks","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","goToEditMode","createField","Input","profile","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileData","isOwner","keys","contacts","key","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref","ProfileInfo","Preloader","photos","large","userPhoto","type","target","files","length","savePhoto","ProfileInfo_ProfileDataForm","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/2.e00bb295.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1xN9v\",\"posts\":\"MyPosts_posts__3uSpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__157oC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3ci7Q\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2IKhr\",\"contact\":\"ProfileInfo_contact__kUGHo\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"render\")\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea}\r\n                       placeholder={\"Post Message\"}\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n               <b>Status:</b> <span  onClick={activateEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            { editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {createField, Input} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm =(props) => {\r\n    return <form>\r\n        <div><button onClick={props.goToEditMode}>save</button></div>\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {props.profile.aboutMe}\r\n        </div>\r\n        {/*<div>*/}\r\n        {/*    <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {*/}\r\n        {/*    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />*/}\r\n        {/*})}*/}\r\n        {/*</div>*/}\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'login'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                { editMode\r\n                    ? <ProfileDataForm profile={props.profile} />\r\n                    : <ProfileData goToEditMode={()=> {setEditMode(true)}} profile={props.profile} isOwner={props.isOwner} />}\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData =(props) => {\r\n\r\n    return <div>\r\n        {props.isOwner && <div><button onClick={props.goToEditMode}>Edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {props.profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>: {props.profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {  //включает гифку загрузки\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}